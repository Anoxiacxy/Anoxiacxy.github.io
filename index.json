[{"content":" 💡 Tutorial # Click the bits in the Interactive Nibble below, observe how Hex and Dec change.\n1. Interactive Nibble # 2. Machine Code # Programs for this CPU are written in machine code. Each machine code instruction is 1 byte (8 bits). The first 4 bits are the opcode, and the last 4 bits are the operand.\nOnly some instructions use the operand bits.\nInstruction Description Opcode Operand STOP Halts the CPU. 0 0000 STA $0 Halts the CPU. 0 0000 Below is an interactive byte. Click the bits to change the opcode and operand.\nOpcode Operand Hex Assembly Below is the full CPU simulator.\n{{ value }} {{ label }} 00 ","date":"28 July 2023","permalink":"/favorites/4-bit-cpu/","section":"Favorites","summary":"💡 Tutorial # Click the bits in the Interactive Nibble below, observe how Hex and Dec change.\n1. Interactive Nibble # 2. Machine Code # Programs for this CPU are written in machine code.","title":"4 Bit CPU"},{"content":"","date":"28 July 2023","permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":"28 July 2023","permalink":"/tags/cpu/","section":"Tags","summary":"","title":"cpu"},{"content":" https://careers.nintendo.com/job-openings/\n","date":"28 July 2023","permalink":"/favorites/","section":"Favorites","summary":"https://careers.nintendo.com/job-openings/","title":"Favorites"},{"content":"\r","date":"28 July 2023","permalink":"/","section":"Home","summary":"\r","title":"Home"},{"content":"","date":"28 July 2023","permalink":"/categories/system/","section":"Categories","summary":"","title":"system"},{"content":"","date":"28 July 2023","permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"","date":"14 July 2023","permalink":"/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"","date":"14 July 2023","permalink":"/tags/python/","section":"Tags","summary":"","title":"python"},{"content":"","date":"14 July 2023","permalink":"/tags/reinforcement-learning/","section":"Tags","summary":"","title":"reinforcement learning"},{"content":" Proximal Policy Optimization (PPO) Click to expand\rimport torch import torch.nn as nn import torch.nn.functional as F ","date":"14 July 2023","permalink":"/posts/reinforcement-learning-algorithms/","section":"Posts","summary":" Proximal Policy Optimization (PPO) Click to expand\rimport torch import torch.nn as nn import torch.nn.functional as F ","title":"Reinforcement Learning Algorithms"},{"content":"","date":"12 July 2023","permalink":"/authors/","section":"Authors","summary":"","title":"Authors"},{"content":"","date":"12 July 2023","permalink":"/authors/link/","section":"Authors","summary":"","title":"link"},{"content":" Practice 8 Some people believe that we should not discuss about the private activities of the popular people, like movie stars and singers. Do you agree? Why?\nPractice 9 Female and male university students should have separate residence halls. Do you agree or disagree?\nPractice 10 Children participating in sports games will become aggressive when they grow up. Do you agree or disagree?\n","date":"12 July 2023","permalink":"/posts/speaking/speaking-written-responses-2/","section":"Posts","summary":"Practice 8 Some people believe that we should not discuss about the private activities of the popular people, like movie stars and singers. Do you agree? Why?\nPractice 9 Female and male university students should have separate residence halls.","title":"Practice Questions and Written Responses (2)"},{"content":"","date":"12 July 2023","permalink":"/series/","section":"Series","summary":"","title":"Series"},{"content":"","date":"12 July 2023","permalink":"/series/speaking/","section":"Series","summary":"","title":"Speaking"},{"content":"","date":"12 July 2023","permalink":"/tags/toefl/","section":"Tags","summary":"","title":"toefl"},{"content":" What is 6089? # Well, the last time I was confused like this was when I seen the number 6502. I guess it is a microproc\njimbro1000/online6809 Online Motorola 6809 Emulator HTML 6 4 Let\u0026rsquo;s do some assembly # The best way to learn is to do. So let\u0026rsquo;s do some assembly. I am going to use the online 6809 assembler. And try to write programs as below.\nCount From 0 To 9 # Write a program that prints the digits from 0 to 9, one after another, in the top left of the text screen. That is, it prints a 0 in the top left, then it replaces the 0 with a 1, then it replaces the 1 with a 2, and so on until it has printed 9. It should return to the operating system (with an RTS) at the end of the program.\nconst text_screen = $0400 start: ldd #$0000 ; load the value 0 | std var ; store the value 0 in var | var = 0 loop: ; | do { ldd var ; load the value of var | pshs d ; save d | jsr PrintDigit ; print the value of var | print(var) puls d ; remove d from the stack | ldd var ; load the value of var | addd #$0001 ; add 1 to the value of var, | var += 1 std var ; store the new value of var | cmpd #$000A ; compare with the value 9 + 1 = A | bne loop ; if not equal, go to loop | } while (var != 10) rts ; return from subroutine | return var: .word 0 ; reserve 2 bytes for the variable PrintDigit: ; This function prints the value in the stack ; at the address of the user stack pointer u + 4, ; pshs \u0026lt;a\u0026gt;: push any register \u0026lt;a\u0026gt; to the stack pshs u ; save u, s = s - 2 | leau ,s ; u = s | PrintDigit(int x) { ldd $04,u ; d = mem[u + 4] | d = x addd #\u0026#39;0\u0026#39; ; d = d + \u0026#39;0\u0026#39; | d += \u0026#39;0\u0026#39; stb text_screen ; mem[text_screen] = b | print(d) leas ,u ; s = u | } puls u ; load u rts To get the extra marks, your program must be 8 or fewer instructions in length.\nstart: lda #\u0026#39;0\u0026#39; ; load the value 0 | a = \u0026#39;0\u0026#39; loop: | do { sta $0400 ; print a | print(a) inca ; a = a + 1 | a = a + 1 cmpa #\u0026#39;:\u0026#39; ; compare with the value \u0026#39;9\u0026#39; + 1 | bne loop ; if not equal, go to loop | } while (a != \u0026#39;9\u0026#39; + 1) rts ; return from subroutine | return Single Digit Fibonacci # Write a program to compute and print each of the first 7 Fibonacci numbers. It must compute the numbers in the sequence. It must print each, one after the other, in the top left of the text screen in the emulator. The first 7 numbers in the sequence are: 0, 1, 1, 2, 3, 5, 8. These are all single digit numbers.\nconst text_screen = $0400 Start: ldd #$0007 ; d = 7 pshs d ; save d lbsr Fibonacci ; call Fibonacci puls d ; load d rts Fibonacci: ; fib requires a parameter in a pshs u ; mem[--s] = u leau ,s ; u = s ldd #0 ; d = 0 pshs d ; mem[--s] = d def a = 0 ldd #1 ; d = 1 pshs d ; mem[--s] = d def b = 1 fib_loop: ldd $04, u ; d = mem[u + 4] cmpd #0 ; if d = 0 if n = 0 beq fib_done ; return 0 subd #1 ; d = d - 1 std $04,u ; mem[u + 4] = d n = n - 1 ldd $02,s ; d = mem[s + 2] pshs d ; mem[--s] = d lbsr PrintDigit ; call PrintDigit puls d ; d = mem[s++] ldd ,s ; d = mem[s] addd $02,s ; d = mem[s + 2] a = mem[s] + mem[s + 2] ldx ,s ; x = mem[s] x = mem[s] std ,s ; mem[s] = d mem[s] = a stx $02,s ; mem[s + 2] = x mem[s + 2] = x bra fib_loop ; goto fib_loop fib_done: leas ,u ; s = u puls u ; u = mem[s++] rts ; return PrintDigit: pshs u ; save u leau ,s ; u = s ldd $04,u ; d = mem[u + 4] addd #\u0026#39;0\u0026#39; ; d = d + \u0026#39;0\u0026#39; stb text_screen ; mem[text_screen] = b leas ,u ; s = u puls u ; load u rts Extend your program to print the numbers one after the other on the top row of the text screen. That is, the top left corner of the screen should read \u0026ldquo;0112358\u0026rdquo; once your program has finished running.\nconst text_screen = $0400 Start: ldx #text_screen ; x = text_screen stx cursor ; cursor = x ldd #$0007 ; d = 7 pshs d ; save d lbsr Fibonacci ; call Fibonacci puls d ; load d rts Fibonacci: ; fib requires a parameter in a pshs u ; mem[--s] = u leau ,s ; u = s ldd #0 ; d = 0 pshs d ; mem[--s] = d def a = 0 ldd #1 ; d = 1 pshs d ; mem[--s] = d def b = 1 fib_loop: ldd $04, u ; d = mem[u + 4] cmpd #0 ; if d = 0 if n = 0 beq fib_done ; return 0 subd #1 ; d = d - 1 std $04,u ; mem[u + 4] = d n = n - 1 ldd $02,s ; d = mem[s + 2] pshs d ; mem[--s] = d lbsr PrintDigit ; call PrintDigit puls d ; d = mem[s++] ldd ,s ; d = mem[s] addd $02,s ; d = mem[s + 2] a = mem[s] + mem[s + 2] ldx ,s ; x = mem[s] x = mem[s] std ,s ; mem[s] = d mem[s] = a stx $02,s ; mem[s + 2] = x mem[s + 2] = x bra fib_loop ; goto fib_loop fib_done: leas ,u ; s = u puls u ; u = mem[s++] rts ; return PrintDigit: pshs u ; save u leau ,s ; u = s ldd $04,u ; d = mem[u + 4] addd #\u0026#39;0\u0026#39; ; d = d + \u0026#39;0\u0026#39; ldx cursor ; x = cursor stb ,x+ ; mem[x + 1] = d stx cursor ; cursor = x leas ,u ; s = u puls u ; load u rts cursor: .word 0 ; cursor = 0 Hexadecimal Fibonacci # Write a routine that, given a value in register D, will print the value in hexadecimal. It should print green on a black background. Hint: The emulator screen does not use ASCII, character 1 is \u0026lsquo;A\u0026rsquo;, character 2 is \u0026lsquo;B\u0026rsquo;, and so on. For this you might find it useful to write a routine that given a character in register A, will print it to the screen. With these routines, write a short test program to print the value FDBC then a space then 1234. The top left of the screen should read \u0026ldquo;FDBC 1234\u0026rdquo; once you have completed this.\nconst text_screen = $0400 Start: ldx #text_screen ; stx cursor ; cursor = text_screen ldd #$FDCB ; lbsr PrintHex ; PrintHex(d = FDCB) ldd #space\t; lbsr PrintStr ; PrintStr(d = space) ldd #$1234 ; lbsr PrintHex ; PrintHex(d = 1234) rts PrintStr: ; the string is in the accumulator D pshs y ; save y ldx cursor ; x = cursor tfr d,y ; y = d print_str_loop: lda ,y+ ; a = mem[y++] cmpa #0 ; if (a == 0) beq print_str_done ; goto print_str_done sta ,x+ ; mem[x++] = a bra print_str_loop ; goto print_str_loop print_str_done: stx cursor ; cursor = x puls y ; restore y rts PrintHex: ; the number is in the accumulator D pshs y ; save y ldx cursor ; x = cursor tfr d,y ; y = d lsra lsra lsra lsra ; a = y \u0026gt;\u0026gt; 8 \u0026gt;\u0026gt; 4 bsr DigitOptimized tfr y,d anda #$0F ; a = y \u0026gt;\u0026gt; 8 \u0026amp; 0x0F bsr DigitOptimized lsrb lsrb lsrb lsrb tfr b,a ; a = y \u0026gt;\u0026gt; 4 \u0026amp; 0x0F bsr DigitOptimized tfr y,d andb #$0F tfr b,a ; a = y \u0026amp; 0x0F bsr DigitOptimized stx cursor puls y rts DigitOptimized: ; the digit is in the accumulator A ; make sure: ; - ldx cursor before ; - sdx cursor after cmpa #$0A ; if (a \u0026gt;= 10) blo if_digit\t; goto if-digit suba #$9\t; bra if_merge\t; goto if-merge if_digit: adda #\u0026#39;0\u0026#39;\t; a += \u0026#39;0\u0026#39; if_merge: sta ,x+\t; mem[x + 1] = d rts cursor: .word 0\t; cursor = 0 space: .byte \u0026#39; \u0026#39;, 0 Write a program that prints a comma seperated list of the first 25 Fibonacci numbers in hexadecimal. You must compute the sequence. Once your program has return the text screen should look like this:\nconst text_screen = $0400 Start: ldx #text_screen ; x = text_screen stx cursor ; cursor = x ldd #25 ; d = 25 pshs d ; mem[--s] = d lbsr Fibonacci ; call Fibonacci puls d ; d = mem[s++] rts Fibonacci: ; fib requires a parameter in a pshs u ; mem[--s] = u leau ,s ; u = s ldd #0 ; d = 0 pshs d ; mem[--s] = d def a = 0 ldd #1 ; d = 1 pshs d ; mem[--s] = d def b = 1 fib_loop: ldd $04, u ; d = mem[u + 4] cmpd #0 ; if d = 0 if n = 0 beq fib_done ; return 0 subd #1 ; d = d - 1 std $04,u ; mem[u + 4] = d n = n - 1 ldd $02,s ; d = mem[s + 2] lbsr PrintHex ; call PrintHex ldd $04,u ; d = mem[u + 4] cmpd #0 ; if d = 0 if n = 0 beq skip_comma ; goto skip_comma ldd #comma ; d = comma lbsr PrintStr ; call PrintStr skip_comma: ldd ,s ; d = mem[s] addd $02,s ; d = mem[s + 2] a = mem[s] + mem[s + 2] ldx ,s ; x = mem[s] x = mem[s] std ,s ; mem[s] = d mem[s] = a stx $02,s ; mem[s + 2] = x mem[s + 2] = x bra fib_loop ; goto fib_loop fib_done: leas ,u ; s = u puls u ; u = mem[s++] rts ; return PrintStr: ; the string is in the accumulator D pshs y ; save y ldx cursor ; x = cursor tfr d,y ; y = d print_str_loop: lda ,y+ ; a = mem[y++] cmpa #0 ; if (a == 0) beq print_str_done ; goto print_str_done sta ,x+ ; mem[x++] = a bra print_str_loop ; goto print_str_loop print_str_done: stx cursor ; cursor = x puls y ; restore y rts PrintHex: ; the number is in the accumulator D pshs y ; save y ldx cursor ; x = cursor tfr d,y ; y = d lsra lsra lsra lsra ; a = y \u0026gt;\u0026gt; 8 \u0026gt;\u0026gt; 4 bsr DigitOptimized tfr y,d anda #$0F ; a = y \u0026gt;\u0026gt; 8 \u0026amp; 0x0F bsr DigitOptimized lsrb lsrb lsrb lsrb tfr b,a ; a = y \u0026gt;\u0026gt; 4 \u0026amp; 0x0F bsr DigitOptimized tfr y,d andb #$0F tfr b,a ; a = y \u0026amp; 0x0F bsr DigitOptimized stx cursor puls y rts DigitOptimized: ; the digit is in the accumulator A ; make sure: ; - ldx cursor before ; - sdx cursor after cmpa #$0A ; if (a \u0026gt;= 10) blo if_digit\t; goto if-digit suba #$9\t; bra if_merge\t; goto if-merge if_digit: adda #\u0026#39;0\u0026#39; ; a += \u0026#39;0\u0026#39; if_merge: sta ,x+ ; mem[x + 1] = d rts cursor: .word 0 ; cursor = 0 space: .byte \u0026#39; \u0026#39;, 0 comma: .byte \u0026#39;,\u0026#39;, 0 Download # Warning! The source code is stored in the web site, not in a database. Download the source code. Download code.zip\rExtract the zip file. unzip code.zip ","date":"10 July 2023","permalink":"/projects/6809-assembly/","section":"Projects","summary":"What is 6089? # Well, the last time I was confused like this was when I seen the number 6502. I guess it is a microproc\njimbro1000/online6809 Online Motorola 6809 Emulator HTML 6 4 Let\u0026rsquo;s do some assembly # The best way to learn is to do.","title":"6809 Assembly"},{"content":" Simple, yet powerful. Learn how to use Blowfish and its features. ","date":"10 July 2023","permalink":"/projects/","section":"Projects","summary":" Simple, yet powerful. Learn how to use Blowfish and its features. ","title":"Projects"},{"content":" Practice 1 Do you agree or disagree with the following statement? Decisions made by a group are always better than decisions made by individuals.\nI agree with the statement that group decisions are better.\nFor one thing, group decisions are more likely to be applicable. When a decision is concluded by many peoples, more factors and consequences are to be taken in to considerations because different people have different view of aspect. Usually, it leads to a more comprehensive decision.\nFor another, members will be more motivated to implement the decision. A person feels more responsible if his or her suggestion accounts for the final decision, just because of the feeling that being acknowledged by others. Therefore, he or she is more likely to work hard to make the decision work. Group decision means everyone in the group will have this kind of thought less or more, and I think it\u0026rsquo;s better than only one person that pushes everyone to work.\nPractice 2 When people are working, some prefer to do hard work first and then do easy work, while others want to do the easy work first and then do the hard one. Which way do you prefer?\nI prefer to do the easy work first.\nBecause I think positive feedback are important at first. Easy work is more likely to be done quickly and successfully, which will give me a sense of achievement. While if I do the hard work first, maybe I have no idea how to do it, feel frustrated and even give up.\nBesides, thinking twice before doing hard work is more efficiency. Complex work usually requires more experience and planning, you may encounter many troubles during the process and stuck in them. This will waste a lot of time. But with the knowledge or just some inspiration from the easy work you have done before, those troubles in the hard work can be solved more easily.\nPractice 3 When it comes to buying daily necessities, some people prefer to shop in grocery stores now and then to gather all the things they need, while others prefer to go to a supermarket and buy everything all at once. Which do you prefer and why?\nI prefer to prepare all the things I need in a supermarket.\nFor one thing, it can save a lot of time. Compared to a supermarket, grocery stores are relatively small, they don\u0026rsquo;t have a wide range of products, and distribute in different places. Since I can buy all kinds of daily necessities in a supermarket, the time I otherwise spend on going to different grocery stores can be saved.\nFor another, it helps to develop a good habit of planning. When going to a supermarket, I need to think for a while about what I need and whether I spend too much money on something. This habit can help me to make better use of my money and avoid impulse buying.\nPractice 4 To enrich their after-school lives and cover living expenses, many college students tend to seek part-time jobs. Some universities worry that work might cut into students\u0026rsquo; study time. Therefore, they set a limit on the numbers of hours per week that students spend on part-time jobs. Do you think this is a good idea?\nI think it is a good idea. Part-time jobs should be limited for college students.\nFor one thing, not all students can handle the balance between study and part-time jobs. The main purpose of going to college is to study. And the part-time jobs are just some approaches to enrich or support study life. It is thoughtless if students spend too much time on part-time jobs and ignore their study. However, these students always exist. So the limit on the part-time jobs is necessary.\nBesides, study needs the atmosphere of campus. If most students are pursuing part-time jobs, the campus will be less active in academic activities. Students will be less motivated to study. As a consequence, the quality of education will be affected.\nPractice 5 Do you agree or disagree with the following statement: Schools should require students to complete physical fitness tests before graduation?\nI agree with the statement. Physical fitness tests are necessary for students.\nI think it is an opportunity for students to have a physical education class. As we know, classroom-based classes usually have a final exam. Students will be forced to study hard to pass the exam. However, these can be used as an excuse for other teachers to occupy the physical education class time. Physical education teachers are prone to getting sick easily.\nIf students are required to complete physical fitness tests, the physical education class will exist. Teachers have no reason to occupy their physical class, and students themselves will value physical exercise more. A balanced life between study and exercise, I believe, is good for students\u0026rsquo; health.\nPractice 6 When people travel, some people prefer to visit some new places where they have never been before. Others prefer to return to places that they have already visited. Which way do you prefer? Explain why.\nI prefer to visit some new places where I have never seen before.\nFor one thing, new places can bring me new experiences. I can taste unique local food, appreciate different scenery and expose to new culture. These experiences enrich my life and broaden my horizon.\nFor another, on workdays, I have already bored with everything around me. Going to the same place again still makes me feel bored, even reminds me of the boring work. Travel is not a regular thing for me, so I want to make the most of it. To escape from the boring life, I prefer to go to a new place when I have time to travel, where I can forget all the troubles from work and enjoy the feeling of freshness.\nPractice 7 Some students prefer to make friends with people who are about the same age. Other students prefer to make friends with people of different ages. Which way do you prefer? Use specific reasons and examples to support your choice.\nI prefer to make friends with people about the same age.\nBecause making friends with people about the same age is easier. One generation have their own experience, so it is less likely to have the common topics between people of different ages. We know, topics is important for people to communicate with each other, and common topics make people feel closer. So the people of the same age are more likely to become friends.\nBesides, people of different ages have different life stages. For example, as a teenager, I can\u0026rsquo;t play basketball with people who are in my parents\u0026rsquo; age because they are not as energetic as me. And I can\u0026rsquo;t play computer games with children because they are not allowed to play games. It seems that even though we are friends, we can\u0026rsquo;t do many things together.\n","date":"10 July 2023","permalink":"/posts/speaking/speaking-written-responses-1/","section":"Posts","summary":"Practice 1 Do you agree or disagree with the following statement? Decisions made by a group are always better than decisions made by individuals.\nI agree with the statement that group decisions are better.","title":"Practice Questions and Written Responses (1)"},{"content":"","date":"10 July 2023","permalink":"/categories/game/","section":"Categories","summary":"","title":"game"},{"content":"","date":"10 July 2023","permalink":"/tags/speaking/","section":"Tags","summary":"","title":"speaking"},{"content":" TOEFL # toefl listening 3\ntoefl listening 7\ntoefl speaking practice 8 - 10\ntoefl writting\nUncategorized # zsh + oh-my-zsh + powerlevel10k\nadd myself to the blowfish user page\nros project: partical position tracking\nppo template\nhugo-cite bug fix: support dark mode, css style\na notebook that records the timeline of your typing\ngoogle advertisement\nstable diffusion learning: https://space.bilibili.com/33956397\ntelegram API \u0026amp; bot: https://core.telegram.org/bots\nwechat API \u0026amp; bot\nupwork tax\nSeries i18n support\n6809 Assembly COSC204\ntoefl speaking recite 1 - 8\ncheckbox in markdown\nvagrant COSC349\nunity certificate\npython certificate\nmigrate this blog for ruiyi site\nresume\nweb archieve: https://web.archive.org/\ntoefl speaking practice 1 - 7\nbuild a telegram bot now\n","date":"10 July 2023","permalink":"/favorites/todo/","section":"Favorites","summary":"TOEFL # toefl listening 3\ntoefl listening 7\ntoefl speaking practice 8 - 10\ntoefl writting\nUncategorized # zsh + oh-my-zsh + powerlevel10k\nadd myself to the blowfish user page","title":"TODO List"},{"content":"","date":"9 July 2023","permalink":"/series/cosc326/","section":"Series","summary":"","title":"COSC326"},{"content":"","date":"9 July 2023","permalink":"/tags/geometry/","section":"Tags","summary":"","title":"geometry"},{"content":" Description This is a project for Etude 03 - Koch Snowflake Interactive at the University of Otago COSC 326. I have implemented an application that can draw a Koch snowflake with any given order.\nYou can scale the snowflake, drag it around, and change the order of the snowflake.\nHow to run # clone project git clone https://altitude.otago.ac.nz/rqian/cosc326-interactive-koch-snowflake.git cd cosc326-koch-snowflake-interactive Run after Installation Run the program by installing the package and running the snowflake command.\n# install pip install . # you can also use \u0026#39;pip install -e .\u0026#39; to install in development mode Now you can run the program by typing snowflake in the terminal.\nsnowflake Get CommandNotFoundException? see Python Scripts path for help. Feel free to uninstall the package after you are done.\npip uninstall ruiyi-koch-snowflake Run without Installation You can also run the program without installing the package.\n# make sure you are in the project directory python main.py # or python main.py --latest python main.py --dev-0 # this will run the development version python main.py --dev-1 # this will run the development version How to use Left click and drag to move the snowflake\rRight click and drag to scale the snowflake\rdrag right to scale up drag left to scale down Use the + and - button to change the order of the snowflake\rUse the Reset Button to reset the snowflake\rDrag the slider to change the resolution of the snowflake\rUse the Online Render checkbox to render the snowflake online\rReference Wikipedia Convert .eps to .svg Turn Your Python Code Into a pip Package in Minutes ","date":"9 July 2023","permalink":"/posts/koch-snowflake/","section":"Posts","summary":"Description This is a project for Etude 03 - Koch Snowflake Interactive at the University of Otago COSC 326. I have implemented an application that can draw a Koch snowflake with any given order.","title":"Interactive Koch Snowflake"},{"content":"","date":"9 July 2023","permalink":"/authors/zelda/","section":"Authors","summary":"","title":"zelda"},{"content":" Preference 1 Some people perfer to travel with their family. Some people perfer to travel alone. Which do you prefer?\nI perfer to travel alone.\nFor one thing, the schedule for the trip will be more flexible. When I travel by my self, it is more likely for me to choose when to go to the destination and when to leave.\nFor another, it allows me to choose the tourist attactions that I show interest in. While traveling with families, it is possible that we cannot reach an agreement about where to visit while it is possible for me to go to the places which I like.\nPreference 2 There are two places to choose. One is the place that you have never visited with higher price. One is the place that you have visited before with lower price. Which one do you choose?\nI choose to go to the place which I have never visited with higher price.\nFor one thing, higher price brings better experiences. Higher price means superior service, extravagant accomodation and maganificent landscapes, which allows me to enjoy myself in a more comfortable way.\nFor another, there is a lack of freshness in the places that I have visited before. By contrast, the new place always enriches our life experience by providing a chance for me to taste unique local food, appreciate different scenery and expose to new culture.\nPreference 3 There are two universites. One is prestigious but requires high tuition. One is not famous but offers scholarship. Which one do you choose?\nI prefer to choose the prestigious university which requires high tuition.\nFor one thing, it offers resources such as professional teachers, advanced science lab and modern library with abundant books, which allows me to achieve better academic performances.\nFor another, even though it requires high tuition, I can do some part-time johs such as working as teaching assistant in campus to cover part of the tuition.\nShould 1 Do you agree or disagree with the following statement? Parents should decide career for their children.\nI disagree with the statement that parents should decide career for their children.\nFor one thing, the carreer might not be suitable for the children. It is likely that parents choose the career which is the best in their eyes without considering their children\u0026rsquo; interests and expectations. As a consequence, their children refuse to devote themselves to the career.\nFor another, it keeps their children from becoming independent. When parents decide career for their children, their kids will gradually rely on their parents. As a consequence, they tend to count on others whenever possible.\nShould 2 Do you agree or disagree with the following statement? We should consult our parents when making decisions.\nI agree with the statement that we should consult our parents when making decisions.\nFor one thing, they can instruct us to make informed choices. Parents, who are more experienced, will take all possible factors into account and offer more feasible advices to help us to avoid making unnecessary mistakes.\nFor another, they can offer support for us such as mental support and financial support. For instance, when we plan to start a new business and need some money, our parents could provide good financial basis for us.\nShould 3 Do you agree or disagree with the statement? Companies should allow employees to listen to music while working.\nI disagree with the statement that companies should allow employees to listen to music while working.\nFor one thing, it leads to lower working efficiency. Listening to music will distract employees\u0026rsquo; attention from what employees are focusing on. As a consequence, they are less able to accomplish our tasks on time.\nFor another, it has negative influence on the communication with others. When customers, colleagues and superiors try to start a conversation, the employees who are putting on their earphones will fail to respond to them promptly.\nComparison 1 Do you agree or disagree with the following statement? Life now is better than before.\nI agree with the statement that life now is better than before.\nFor one thing, the transportation system is more complete. Different means of transportations are available such as subway, airplane and train, which takes less time for people to travel around.\nFor anther, the telecommunication tools are more advanced. Thanks to the advent of cell phone, it is posible for us to connect with others within several seconds when something urgent takes place.\nComparison 2 Do you agree or disagree with the following statement? It is easier to be children than to be adults.\nI agree with the statement.\nFor one thing, children do not to be concerned about making money while it is necessary for adults to work hard and support their family, which is a heavy burden for them.\nFor another, children do not need to bother themselves about taking care of other family members while while adults are supposed to attend to all of the members in the family.\n","date":"7 July 2023","permalink":"/posts/speaking/speaking-recitation/","section":"Posts","summary":"Preference 1 Some people perfer to travel with their family. Some people perfer to travel alone. Which do you prefer?\nI perfer to travel alone.\nFor one thing, the schedule for the trip will be more flexible.","title":"Recitation of Model Essay"},{"content":"","date":"10 December 2017","permalink":"/tags/c++/","section":"Tags","summary":"","title":"c++"},{"content":"","date":"10 December 2017","permalink":"/tags/cli/","section":"Tags","summary":"","title":"cli"},{"content":" 总览 # 以上已经给出了有关此程序的效果图和流程图，虽然与实际程序稍有差异，但也八九不离十了。 关于此次贪吃蛇的制作，主要还是为了锻炼一下代码能力，也就相当于一个超级大模拟吧。 具体相当于要实现以下功能\n游戏实现 # 游戏的主体部分，即有关地图的加载，蛇身的移动，游戏结束的判定等等，地图由文件形式存储，可以自己DIY哈\n菜单界面 # 其实，这个玩意才最难搞，我写了个 Button 类，专门来处理有关这些菜单按钮的界面，然后疯狂调参，把按钮们放在一个合适的位置\n分数统计 # 为永久保存历史记录与排行榜，可以开一个文件，把战绩都保存在里面，然后每次更新文件里的内容即可\n操作设置 # 有的人习惯按转向来操作，即控制蛇的左拐和右拐，有的人习惯直接用上下左右控制蛇的方向，考虑到这一点，我添加了这个设置，并且为了永久保存，依旧将设置的结果保存在文件里面\n介绍 # 首先进入的便是主菜单，截图如下\n这个时候可以上下键选择，空格或者回车键确认，即可进入相应的选项，先直接开始游戏\n选择一个模式，选择的方法同上\n注意，游戏时请将输入法切换成英文，同时尽可能使用 WASD 而不是键盘右侧的上下左右，减少一些不明原因带来的延迟现象\n同时，空格键还有暂停的功能，再次点击即可继续游戏（本来打算再写个暂停的界面的，但因问没 (bo) 时 (zhu) 间 (lan) ，就放弃了）\n然后是游戏结束时的界面，依旧上下键选择，空格回车键确认，此界面与分数统计一起食用效果更佳\n历史最佳，即分数统计系统，可用上下键翻页，空格回车键返回上一级\n以上就是设置里面两种操作模式的选择，可以根据个人的喜好自行设置，关于那个动画的实现，我比较蠢。。。就直接一个一个字慢慢输出的，中文汉字还真不知道有没有什么好的输出办法。。。\n最后打个自己博客的广告，溜咯\n高级 # 自定义地图 # 在 data/mode/ 文件夹下有 4 个地图包，点开之后里面大概长这个样子，然后我们就可以愉快的修改地图啦，注意不要让蛇一开始就撞到墙上，地图的大小也必须是 15×20 的，虽然你也可以直接在源代码里面强行修改地图的大小，但那样的话可能会造成文字显示的位置不对等问题\n可以看到，你还可以在里面修改颜色，以及有关蛇的参数，注意蛇身的坐标必须按顺序给出，不然后果会很严重 另外，因为文件读入的识别功能不那么智能，所以请不要随意调整参数的位置与空格的格式。。。\n游戏下载 # 注意，此下载链接仅供娱乐，内含数据包及可执行程序，解压后无需安装即可开始游戏，但不包含源代码\n源代码 # 没写什么注释，只把关于 windows API 里面自己不熟悉的函数写了下注释，大家将就看下\n//Anoxiacxy #include \u0026lt;windows.h\u0026gt; #include \u0026lt;iostream\u0026gt; #include \u0026lt;fstream\u0026gt; #include \u0026lt;cstring\u0026gt; #include \u0026lt;conio.h\u0026gt; #include \u0026lt;vector\u0026gt; #include \u0026lt;cstdio\u0026gt; #include \u0026lt;algorithm\u0026gt; #include \u0026lt;ctime\u0026gt; #define W 20 #define H 15 using namespace std; //-----------------------------隐藏光标 void HideCursor(){ HANDLE handle = GetStdHandle(STD_OUTPUT_HANDLE); CONSOLE_CURSOR_INFO CursorInfo; GetConsoleCursorInfo(handle,\u0026amp;CursorInfo);//获取控制台光标信息 CursorInfo.bVisible=false;//隐藏控制台光标 SetConsoleCursorInfo(handle,\u0026amp;CursorInfo);//设置控制台光标状态 } void SetWindowSize(int cols, int lines); void Goto(int x, int y); void SetColor(int colorID); void SetWindowSize(int cols, int lines){//设置窗口大小 system(\u0026#34;title GreedySnake\u0026#34;);//设置窗口标题 char cmd[30]; //一个图形■占两个字符，故宽度乘以2 sprintf(cmd, \u0026#34;mode con cols=%d lines=%d\u0026#34;, cols * 2, lines); system(cmd);//设置窗口宽度和高度 } void Goto(int x,int y){//设置光标位置 COORD position; position.X = x * 2; position.Y = y; SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), position); } void SetColor(int colorID){//设置文本颜色 SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), colorID); } //---------------------------------------------// const string CLEAR=\u0026#34; \u0026#34;; class Point{ // Point类 表示控制台里面的一个坐标 private: int x,y; public: Point(int x = 0,int y = 0):x(x), y(y){} void Set(int x,int y); //将坐标设为-- void Print(string Object); //在该坐标输出一个字符 void Print(string Object, int color); //在该坐标输出一个带颜色的字符 void Clear(); //清空当前坐标的字符 int Getx(){return this-\u0026gt;x;} int Gety(){return this-\u0026gt;y;} bool operator == (const Point\u0026amp; point) {return point.x == this-\u0026gt;x \u0026amp;\u0026amp; point.y == this-\u0026gt;y;} }; void Point::Print(string Object, int color){ SetColor(color); Goto(x, y); cout \u0026lt;\u0026lt; Object; } void Point::Print(string Object){ Goto(x, y); cout \u0026lt;\u0026lt; Object; } void Point::Clear(){ Point::Print(CLEAR); } void Point::Set(int x, int y){ this-\u0026gt;x = x; this-\u0026gt;y = y; } //---------------------------------------------// #define STARTGAME 0 #define RANKING 1 #define SETTING 2 #define ABOUT 3 #define EXIT 4 #define MAINMENU_TOT 5 #define EASY 0 #define NORMAL 1 #define HARD 2 #define UNBELIEVABLE 3 #define MODEMENU_TOT 4 #define PLAY_AGAIN 0 #define SHOW_RANK 1 #define BACK_TO_MODEMENU 2 #define BACK_TO_MAINMENU 3 #define GAMEOVERMENU_TOT 4 class Button{ public: Button(){} //设置当前按钮显示字符，位置，未选中时颜色，选中时颜色 void Set(string s, Point p, int c1, int c2);\tvoid Print(); //输出 bool slect; //是否选中 Point pos;\tprivate: string discribe; int color[2]; //0---unslected 1---slected }; void Button::Set(string s, Point p, int c1, int c2){ discribe = s; pos = p; color[0] = c1; color[1] = c2; slect = 0; } void Button::Print(){ SetColor(color[slect]); Goto(pos.Getx(), pos.Gety()); cout \u0026lt;\u0026lt; discribe; } //---------------------------------------------// #define EMPTY 0 #define WALL 1 #define SNAKE 2 #define FOOD 3 #define ELEMENT_TOT 4 #define ABOUT_TOT 4 void Initializatoin();//初始化，读入数据 string element[ELEMENT_TOT];//元素符号 Button about_button[ABOUT_TOT]; int MainMenu();\t//主菜单--返回选项 int ModeMenu();\t//模式选择--返回选项 int GameOverMenu(int); //游戏结束--传入得分--返回选项 int SetMenu(); //操作设置--返回选项 int mp[W][H]; //地图 int empty_num;\t//地图中空位的个数 void NewFood(int color){ //在地图的剩余空位中随机生成一个食物 srand(time(NULL)); int pos = rand() % empty_num + 1; for(int j = 0; j \u0026lt; H; j++) for(int i = 0; i \u0026lt; W; i++){ if(mp[i][j] == EMPTY) pos--; if(pos == 0 \u0026amp;\u0026amp; mp[i][j] == EMPTY){ mp[i][j] = FOOD; Point(i, j).Print(element[FOOD], color); empty_num--; return; } }\t} struct Snake{\tPoint body[W * H]; //身体--由一个个点组成 int head, tail;\t//头-尾 int speed;\t//速度 int dicx, dicy; //方向 int color; Snake(){} void Set(Point snk[], int len, int _color, int _speed, int x, int y) {\t//一个初始化函数 head = len; tail = 1; color = _color; speed = _speed; dicx = x; dicy = y; for(int i = 1; i \u0026lt;= len; i++){ body[i] = snk[i]; body[i].Print(element[SNAKE], color); mp[body[i].Getx()][body[i].Gety()] = SNAKE;\t} } int move() { //控制蛇向当前方向移动一格--返回蛇头遇到的物品 int hx = body[head].Getx() + dicx; int hy = body[head].Gety() + dicy; int tmp = mp[hx][hy]; if(mp[hx][hy] == WALL || mp[hx][hy] == SNAKE) return tmp; if(mp[hx][hy] != FOOD){ int tx = body[tail].Getx(); int ty = body[tail].Gety(); body[tail].Clear(); mp[tx][ty] = EMPTY; tail = (tail + 1) % (W * H); } mp[hx][hy] = SNAKE; head = (head + 1) % (W * H); body[head].Set(hx, hy); body[head].Print(element[SNAKE], color); return tmp; } void turn_left() {\t//左转 dicx *= -1; swap(dicx, dicy); } void turn_right() {\t//右转 dicy *= -1; swap(dicx, dicy); } }; #define OPT_L_R 0 //ad左右拐弯 #define OPT_U_D_L_R 1//直接转向xx #define OPT_TOT 2 #define DISCRIBE_LEN 100 //选项描述的最大长度（其实用不着这么多） int set_opt=1; void DealOpt(char press, Snake\u0026amp; snake){\t//处理游戏时的按键操作，强烈建议仅使用 WASD if(press == \u0026#39; \u0026#39;)while(getch() != \u0026#39; \u0026#39;); else if(set_opt == OPT_L_R) switch(press){ case 75://left case \u0026#39;A\u0026#39;: case \u0026#39;a\u0026#39;: snake.turn_left(); break; case 77://right case \u0026#39;D\u0026#39;: case \u0026#39;d\u0026#39;: snake.turn_right(); break; default:break; } else if(set_opt == OPT_U_D_L_R) switch(press){ case \u0026#39;A\u0026#39;: case \u0026#39;a\u0026#39;: case 75 : if(snake.dicx == 0){ if(snake.dicy == 1) snake.turn_right(); else snake.turn_left(); }break; case \u0026#39;D\u0026#39;: case \u0026#39;d\u0026#39;: case 77 : if(snake.dicx == 0){ if(snake.dicy == -1) snake.turn_right(); else snake.turn_left(); }break; case \u0026#39;W\u0026#39;: case \u0026#39;w\u0026#39;: case 72 : if(snake.dicy == 0){ if(snake.dicx == -1) snake.turn_right(); else snake.turn_left(); }break; case \u0026#39;S\u0026#39;: case \u0026#39;s\u0026#39;: case 80 : if(snake.dicy == 0){ if(snake.dicx == 1) snake.turn_right(); else snake.turn_left(); }break; } } int Play(int Mode){\t//游戏的过程 ifstream fin; string tmmp; switch(Mode){\t//打开选择的模式地图 case EASY: fin.open(\u0026#34;data//mode//easy.mode\u0026#34;);\tbreak; case NORMAL: fin.open(\u0026#34;data//mode//normal.mode\u0026#34;);\tbreak; case HARD:\tfin.open(\u0026#34;data//mode//hard.mode\u0026#34;);\tbreak; case UNBELIEVABLE:\tfin.open(\u0026#34;data//mode//unbelievable.mode\u0026#34;);\tbreak; default:return 0; } if(!fin.is_open()){ system(\u0026#34;cls\u0026#34;); cout \u0026lt;\u0026lt; \u0026#34;数据丢失，请检查数据文件后重新启动游戏\u0026#34;; exit(0); } empty_num=0;\t//载入地图 int wall_color, snake_color, food_color; fin \u0026gt;\u0026gt; tmmp \u0026gt;\u0026gt; wall_color; fin \u0026gt;\u0026gt; tmmp \u0026gt;\u0026gt; snake_color fin \u0026gt;\u0026gt; tmmp \u0026gt;\u0026gt; food_color \u0026gt;\u0026gt; tmmp; for(int j = 0; j \u0026lt; H; j++) for(int i = 0; i \u0026lt; W; i++) { fin \u0026gt;\u0026gt; mp[i][j]; if(mp[i][j] == EMPTY) empty_num++; Point(i, j).Print(element[mp[i][j]], wall_color); } int len; Point tmp[W*H]; fin \u0026gt;\u0026gt; tmmp \u0026gt;\u0026gt; len \u0026gt;\u0026gt; tmmp; for(int i = 1; i \u0026lt;= len; i++){ empty_num--; int x,y; fin \u0026gt;\u0026gt; tmmp \u0026gt;\u0026gt; x \u0026gt;\u0026gt; tmmp \u0026gt;\u0026gt; y \u0026gt;\u0026gt; tmmp; tmp[i].Set(x, y); } int dicx, dicy, speed; fin \u0026gt;\u0026gt; tmmp \u0026gt;\u0026gt; dicx \u0026gt;\u0026gt; dicy; fin \u0026gt;\u0026gt; tmmp \u0026gt;\u0026gt; speed; fin.close(); Snake snake; snake.Set(tmp, len, snake_color, speed, dicx, dicy); NewFood(food_color); int score = 0; bool live = true; while(live) {\t//游戏循环--当蛇活着时 if(kbhit()) { char press=getch(); DealOpt(press, snake); } switch(snake.move()){ case SNAKE: case WALL: live=false; break; case FOOD: NewFood(food_color); score++; break; default:break; } Sleep(1000 / snake.speed); } return score; } #define SHOW_NUM 5 #define SPEED 30 int best_score[10086]; void UpdataScore(int score){\t//游戏结束后更新分数，并及时记录在文件中 best_score[++best_score[0]] = score; for(int k = best_score[0]; best_score[k] \u0026gt; best_score[k-1] \u0026amp;\u0026amp; k \u0026gt; 1; k--) swap(best_score[k], best_score[k-1]); while(best_score[0] \u0026gt; 10000) best_score[0]--; ofstream fout; fout.open(\u0026#34;data//best.score\u0026#34;); for(int i = 0; i \u0026lt;= best_score[0]; i++) fout \u0026lt;\u0026lt; best_score[i] \u0026lt;\u0026lt; endl; fout.close(); } void ShowScore(int now){\t//打印当前页的分数 system(\u0026#34;cls\u0026#34;); for(int i = 1; i \u0026lt;= SHOW_NUM \u0026amp;\u0026amp; (now - 1) * SHOW_NUM + i \u0026lt;= best_score[0]; i++) { Goto(8, i \u0026lt;\u0026lt; 1 | 1); Sleep(SPEED); printf(\u0026#34;%d\u0026#34;,(now - 1) * SHOW_NUM + i); Goto(10,i \u0026lt;\u0026lt; 1 | 1); printf(\u0026#34;%4d\u0026#34;, best_score[(now - 1) * SHOW_NUM + i]); } } void Setting() {\t//就是操作的设置啦--同样及时记录 set_opt = SetMenu(); ofstream fout; fout.open(\u0026#34;data//others//setting.txt\u0026#34;); fout \u0026lt;\u0026lt; set_opt \u0026lt;\u0026lt; endl; fout.close(); } void Ranking(){\t//此函数可以实现分数的翻页功能 int cnt = (best_score[0] + SHOW_NUM - 1) / SHOW_NUM; int now = 1; ShowScore(now); while(true){ bool turn_out = false; switch(getch()){ case \u0026#39;w\u0026#39;: case 72 ://up if(now != 1){ now--; ShowScore(now); } break; case \u0026#39;s\u0026#39;: case 80 ://down if(now \u0026lt; cnt){ now++; ShowScore(now); } break; case \u0026#39; \u0026#39;: case 13 ://enter turn_out = true; default:break; } if(turn_out)break; } } void StartGame(){\t//开始游戏的选项 while(true){ system(\u0026#34;cls\u0026#34;); int mode = ModeMenu(); bool changemode = false; while(true){ int score = Play(mode); UpdataScore(score); while(true){ bool turn_out = false; switch(GameOverMenu(score)){ case PLAY_AGAIN:\tturn_out = true; break; case SHOW_RANK:\tRanking(); break; case BACK_TO_MAINMENU:\treturn; case BACK_TO_MODEMENU:\tturn_out=true; changemode=true; break;\t} if(turn_out)break; } if(changemode == true)break; } } } void About() {\t//关于页面--只能在源代码里面修改 不属于外面的data文件 system(\u0026#34;cls\u0026#34;); for (int slect = 0; slect \u0026lt; ABOUT_TOT; slect++) about_button[slect].Print(); while(true){ switch(getch()){ case \u0026#39; \u0026#39;: case 13 ://enter return; default :break; } } } int main(){ SetWindowSize(W, H);\t//设置窗口大小 HideCursor();\t//隐藏光标 //StartAnimation();\t//开始动画--这个也懒得写了 Initializatoin();\t//初始化 while(true){ switch(MainMenu()){ case STARTGAME:\tStartGame();break; case RANKING:\tRanking();break; case SETTING:\tSetting();break; case ABOUT:\tAbout();break; case EXIT:\texit(0); default: break; } } return 0; } void Initializatoin(){\t//初始化--读入一大堆文件之类的 ifstream fin; string tmmp; fin.open(\u0026#34;data//others//element.txt\u0026#34;);//读入元素符号 if(!fin.is_open()){ system(\u0026#34;cls\u0026#34;); cout \u0026lt;\u0026lt; \u0026#34;数据丢失，请检查数据文件后重新启动游戏\u0026#34;; exit(0); } element[0]=\u0026#34; \u0026#34;; for(int i = WALL; i \u0026lt; ELEMENT_TOT; i++) fin \u0026gt;\u0026gt; tmmp \u0026gt;\u0026gt; element[i]; fin.close(); fin.open(\u0026#34;data//best.score\u0026#34;);\t//读入历史分数 if(fin.is_open()){ fin \u0026gt;\u0026gt; best_score[0]; for(int i = 1; i \u0026lt;= best_score[0]; i++) fin \u0026gt;\u0026gt; best_score[i]; } fin.close(); fin.open(\u0026#34;data//others//setting.txt\u0026#34;); if(!fin.is_open()){ system(\u0026#34;cls\u0026#34;); cout \u0026lt;\u0026lt; \u0026#34;数据丢失，请检查数据文件后重新启动游戏\u0026#34;; exit(0); } fin \u0026gt;\u0026gt; set_opt; fin.close(); string s; int c1, c2, xpos, ypos;\t//防伪--广告 s = \u0026#34;code by\u0026#34;; c1 = c2 = 8; xpos = 5, ypos = 6; about_button[0].Set(s, Point(xpos,ypos), c1, c2); s = \u0026#34;anoxiacxy\u0026#34;; c1 = c2 = 15; xpos = 10, ypos = 6; about_button[1].Set(s, Point(xpos,ypos), c1, c2); s = \u0026#34;anoxiacxy.github.io\u0026#34;; c1 = c2 = 8; xpos = 5, ypos = 7; about_button[2].Set(s, Point(xpos,ypos), c1, c2); } int MainMenu(){ Button main_button[MAINMENU_TOT];//主菜单按钮 ifstream fin; string tmmp; fin.open(\u0026#34;data//button//mainmenu.button\u0026#34;);//载入 if(!fin.is_open()){ system(\u0026#34;cls\u0026#34;); cout \u0026lt;\u0026lt; \u0026#34;数据丢失，请检查数据文件后重新启动游戏\u0026#34;; exit(0); } for(int slect = STARTGAME; slect \u0026lt; MAINMENU_TOT; slect++){ string s; int c1, c2, xpos, ypos; fin \u0026gt;\u0026gt; tmmp \u0026gt;\u0026gt; s \u0026gt;\u0026gt; tmmp; fin \u0026gt;\u0026gt; tmmp \u0026gt;\u0026gt; xpos \u0026gt;\u0026gt; tmmp \u0026gt;\u0026gt; ypos \u0026gt;\u0026gt; tmmp; fin \u0026gt;\u0026gt; tmmp \u0026gt;\u0026gt; c1 \u0026gt;\u0026gt; c2; main_button[slect].Set(s, Point(xpos,ypos), c1, c2); } fin.close(); system(\u0026#34;cls\u0026#34;); for(int slect = STARTGAME; slect \u0026lt; MAINMENU_TOT; slect++){ main_button[slect].slect = false; main_button[slect].Print(); } int slect = STARTGAME; main_button[slect].slect = true; main_button[slect].Print(); while(true){ switch(getch()){ case \u0026#39;W\u0026#39;: case \u0026#39;w\u0026#39;: case 72://up main_button[slect].slect = false; main_button[slect].Print(); slect = (slect - 1 + MAINMENU_TOT) % MAINMENU_TOT; main_button[slect].slect = true; main_button[slect].Print(); break; case \u0026#39;S\u0026#39;: case \u0026#39;s\u0026#39;: case 80://down main_button[slect].slect = false; main_button[slect].Print(); slect=(slect+1)%MAINMENU_TOT; main_button[slect].slect = true; main_button[slect].Print(); break; case \u0026#39; \u0026#39;: case 13://enter return slect; default:break; } } } int ModeMenu(){ Button mode_button[MODEMENU_TOT];//模式选择按钮 ifstream fin; string tmmp; fin.open(\u0026#34;data//button//modemenu.button\u0026#34;);//载入 if(!fin.is_open()){ system(\u0026#34;cls\u0026#34;); cout\u0026lt;\u0026lt;\u0026#34;数据丢失，请检查数据文件后重新启动游戏\u0026#34;; exit(0); } for(int slect=EASY;slect\u0026lt;MODEMENU_TOT;slect++){ string s;int c1,c2,xpos,ypos; fin \u0026gt;\u0026gt; tmmp \u0026gt;\u0026gt; s \u0026gt;\u0026gt; tmmp; fin \u0026gt;\u0026gt; tmmp \u0026gt;\u0026gt; xpos \u0026gt;\u0026gt; tmmp \u0026gt;\u0026gt; ypos \u0026gt;\u0026gt; tmmp; fin \u0026gt;\u0026gt; tmmp \u0026gt;\u0026gt; c1 \u0026gt;\u0026gt; c2; mode_button[slect].Set(s, Point(xpos,ypos), c1, c2); } fin.close(); system(\u0026#34;cls\u0026#34;); for(int slect = EASY; slect \u0026lt; MODEMENU_TOT; slect++){ mode_button[slect].slect = false; mode_button[slect].Print(); } int slect = EASY; mode_button[slect].slect = true; mode_button[slect].Print(); while(true){ switch(getch()){ case \u0026#39;W\u0026#39;: case \u0026#39;w\u0026#39;: case 72://up mode_button[slect].slect = false; mode_button[slect].Print(); slect=(slect-1+MODEMENU_TOT)%MODEMENU_TOT; mode_button[slect].slect = true; mode_button[slect].Print(); break; case \u0026#39;S\u0026#39;: case \u0026#39;s\u0026#39;: case 80://down mode_button[slect].slect = false; mode_button[slect].Print(); slect=(slect+1)%MODEMENU_TOT; mode_button[slect].slect = true; mode_button[slect].Print(); break; case \u0026#39; \u0026#39;: case 13://enter return slect; default:break; } }\t} int GameOverMenu(int score){ Button gameover_button[GAMEOVERMENU_TOT];\t//游戏结束的按钮 ifstream fin; string tmmp; fin.open(\u0026#34;data//button//gameovermenu.button\u0026#34;);//载入 if(!fin.is_open()){ system(\u0026#34;cls\u0026#34;); cout\u0026lt;\u0026lt;\u0026#34;数据丢失，请检查数据文件后重新启动游戏\u0026#34;; exit(0); } for(int slect = PLAY_AGAIN; slect \u0026lt; GAMEOVERMENU_TOT; slect++){ string s;int c1, c2, xpos, ypos; fin \u0026gt;\u0026gt; tmmp \u0026gt;\u0026gt; s \u0026gt;\u0026gt; tmmp; fin \u0026gt;\u0026gt; tmmp \u0026gt;\u0026gt; xpos \u0026gt;\u0026gt; tmmp \u0026gt;\u0026gt; ypos \u0026gt;\u0026gt; tmmp; fin \u0026gt;\u0026gt; tmmp \u0026gt;\u0026gt; c1 \u0026gt;\u0026gt; c2; gameover_button[slect].Set(s, Point(xpos,ypos), c1, c2); } fin.close();\tsystem(\u0026#34;cls\u0026#34;); SetColor(15); Goto(8, 3); printf(\u0026#34;分数%4d\u0026#34;, score); for(int slect = PLAY_AGAIN; slect \u0026lt; GAMEOVERMENU_TOT; slect++){ gameover_button[slect].slect = false; gameover_button[slect].Print(); } int slect = PLAY_AGAIN; gameover_button[slect].slect = true; gameover_button[slect].Print(); while(true){ switch(getch()){ case \u0026#39;W\u0026#39;: case \u0026#39;w\u0026#39;: case 72 ://up gameover_button[slect].slect = false; gameover_button[slect].Print(); slect = (slect - 1 + GAMEOVERMENU_TOT) % GAMEOVERMENU_TOT; gameover_button[slect].slect = true; gameover_button[slect].Print(); break; case \u0026#39;S\u0026#39;: case \u0026#39;s\u0026#39;: case 80 ://down gameover_button[slect].slect = false; gameover_button[slect].Print(); slect = (slect + 1) % GAMEOVERMENU_TOT; gameover_button[slect].slect = true; gameover_button[slect].Print(); break; case \u0026#39; \u0026#39;: case 13 ://enter return slect; default:break; } }\t} int SetMenu(){ Button set_button[OPT_TOT]; //设置的按钮 ifstream fin; string tmmp; fin.open(\u0026#34;data//button//setmenu.button\u0026#34;);//载入 if(!fin.is_open()){ system(\u0026#34;cls\u0026#34;); cout\u0026lt;\u0026lt;\u0026#34;数据丢失，请检查数据文件后重新启动游戏\u0026#34;; exit(0); } for(int slect = OPT_L_R; slect \u0026lt; OPT_TOT; slect++){ string s; int c1, c2, xpos, ypos; fin \u0026gt;\u0026gt; tmmp \u0026gt;\u0026gt; s \u0026gt;\u0026gt; tmmp; fin \u0026gt;\u0026gt; tmmp \u0026gt;\u0026gt; xpos \u0026gt;\u0026gt; tmmp \u0026gt;\u0026gt; ypos \u0026gt;\u0026gt; tmmp; fin \u0026gt;\u0026gt; tmmp \u0026gt;\u0026gt; c1 \u0026gt;\u0026gt; c2; set_button[slect].Set(s, Point(xpos,ypos), c1, c2); } fin.close(); system(\u0026#34;cls\u0026#34;); for(int slect = OPT_L_R; slect \u0026lt; OPT_TOT; slect++){ set_button[slect].slect = false; set_button[slect].Print(); } int slect = set_opt; set_button[slect].slect = true; set_button[slect].Print(); Button discribe[OPT_TOT][DISCRIBE_LEN]; int len[OPT_TOT]; fin.open(\u0026#34;data//others//discribe.txt\u0026#34;); if(!fin.is_open()){ system(\u0026#34;cls\u0026#34;); cout\u0026lt;\u0026lt;\u0026#34;数据丢失，请检查数据文件后重新启动游戏\u0026#34;; exit(0); } for (int i = OPT_L_R; i \u0026lt; OPT_TOT; i++) { fin \u0026gt;\u0026gt; tmmp \u0026gt;\u0026gt; len[i]; for (int j = 1; j \u0026lt;= len[i]; j++) { string s; int c1, c2, xpos, ypos; fin \u0026gt;\u0026gt; tmmp \u0026gt;\u0026gt; s \u0026gt;\u0026gt; tmmp; fin \u0026gt;\u0026gt; tmmp \u0026gt;\u0026gt; xpos \u0026gt;\u0026gt; tmmp \u0026gt;\u0026gt; ypos \u0026gt;\u0026gt; tmmp; fin \u0026gt;\u0026gt; tmmp \u0026gt;\u0026gt; c1 \u0026gt;\u0026gt; c2; discribe[i][j].Set(s, Point(xpos,ypos), c1, c2); } } fin.close(); for(int i = 1; i \u0026lt;= len[slect]; i++){ discribe[slect][i].Print(); Sleep(SPEED); } while(true){ switch(getch()){ case \u0026#39;A\u0026#39;: case \u0026#39;a\u0026#39;: case 75 ://left set_button[slect].slect = false; set_button[slect].Print(); for(int i=1;i\u0026lt;=len[slect];i++) discribe[slect][i].pos.Clear(); slect = (slect - 1 + OPT_TOT) % OPT_TOT; set_button[slect].slect = true; set_button[slect].Print(); for(int i=1;i\u0026lt;=len[slect];i++){ discribe[slect][i].Print(); Sleep(SPEED); } break; case \u0026#39;D\u0026#39;: case \u0026#39;d\u0026#39;: case 77 ://right set_button[slect].slect = false; set_button[slect].Print(); for(int i=1;i\u0026lt;=len[slect];i++) discribe[slect][i].pos.Clear(); slect=(slect + 1) % OPT_TOT; set_button[slect].slect = true; set_button[slect].Print(); for(int i=1;i\u0026lt;=len[slect];i++){ discribe[slect][i].Print(); Sleep(SPEED); } break; case \u0026#39; \u0026#39;: case 13 ://enter return slect; default:break; } } } ","date":"10 December 2017","permalink":"/projects/greedysnake/","section":"Projects","summary":"总览 # 以上已经给出了有关此程序的效果图和流程图，虽然与实际程序稍有差异，但也八九不离十了。 关于此次贪吃蛇的制作，主要还是为了锻炼一下代码能力，也就相当于一个超级大模拟吧。 具体相当于要实现以下功能\n游戏实现 # 游戏的主体部分，即有关地图的加载，蛇身的移动，游戏结束的判定等等，地图由文件形式存储，可以自己DIY哈\n菜单界面 # 其实，这个玩意才最难搞，我写了个 Button 类，专门来处理有关这些菜单按钮的界面，然后疯狂调参，把按钮们放在一个合适的位置\n分数统计 # 为永久保存历史记录与排行榜，可以开一个文件，把战绩都保存在里面，然后每次更新文件里的内容即可\n操作设置 # 有的人习惯按转向来操作，即控制蛇的左拐和右拐，有的人习惯直接用上下左右控制蛇的方向，考虑到这一点，我添加了这个设置，并且为了永久保存，依旧将设置的结果保存在文件里面\n介绍 # 首先进入的便是主菜单，截图如下\n这个时候可以上下键选择，空格或者回车键确认，即可进入相应的选项，先直接开始游戏\n选择一个模式，选择的方法同上\n注意，游戏时请将输入法切换成英文，同时尽可能使用 WASD 而不是键盘右侧的上下左右，减少一些不明原因带来的延迟现象\n同时，空格键还有暂停的功能，再次点击即可继续游戏（本来打算再写个暂停的界面的，但因问没 (bo) 时 (zhu) 间 (lan) ，就放弃了）","title":"CLI Greedy Snake"},{"content":" https://www.manim.community/\ndocker run -it -p 8888:8888 manimcommunity/manim jupyter lab \u0026ndash;ip=0.0.0.0\n","date":"1 January 0001","permalink":"/favorites/manim/","section":"Favorites","summary":"https://www.manim.community/\ndocker run -it -p 8888:8888 manimcommunity/manim jupyter lab \u0026ndash;ip=0.0.0.0","title":""},{"content":"搜搜算法的核心\nstate，状态，状态对应了搜索过程中的节点（node） action，动作 状态可以是一个数，可以是一个数组，可以是任何一系列能够描述事物的参数。比如对于迷宫而言，我们会将迷宫的每个位置有什么作为状态。\n动作存在于两个状态之间，比如我有一个动作是交换相邻元素。那么对于状态\n[1, 2, 3] -\u0026gt; [1, 3, 2] 以上就是交换后两个元素的动作。\n相邻状态，就是能从一个状态，执行一步动作就能到达的状态集合\n[1, 2, 3] -\u0026gt; [2, 1, 3]\r[1, 2, 3] -\u0026gt; [1, 3, 2] 状态123，经过一次交换动作，只能到达状态213，132，无法到达状态321，312，231\nfringe，边界（状态）集合，边界就是我已经枚举到了这个状态，但还没有从这个状态出发，考虑这个状态能够通过动作扩展出其他状态的状态集合（还没扩展）。\n搜索时这样的一个过程：从一个状态开始，枚举所有可能的动作，找到该动作的相邻状态，然后从相邻状态继续出发，枚举所有可能的动作，得到相邻状态的相邻状态，……如此重复，从一个状态可以达到相邻状态的相邻状态的相邻状态的相邻状态……，将所有可能的状态按照这种方式枚举出来的过程，就叫做搜索。\n搜索往往时有目标的，当我们枚举到一个满足条件的内容时，就可以停下的，这个目标一般称为 goal。\n搜索算法的分类\nLecture3: uninformed search，也就是没有额外信息的搜搜，常见算法 DFS，BFS，DLS，IDS\nDFS：Depth first search，深度优先搜索，简称深搜：\n深搜就是在边界集合 fringe 中，优先扩展深度最深的节点（深度就是从初始状态 init state 开始，需要多少个 action 才能到达该状态）\nBFS：Breath first search，广度优先搜索，简称广搜：\n广搜就是在边界集合 fringe 中，优先扩展深度最浅的节点\nLecture4 ：informed search\nA*：BFS和DFS是两个极端，一个最深一个最浅，但都不够智能，而且仅仅使用了深度作为判断的依据。我们将深度称为 g，当前状态到终止状态的估计步数称为 h，定义新的价值为 f=g + h，然后优先扩展 f 最小的节点。f 最小意味着，这一个节点在目前所有见过的节点中，估计能够最快搜索到终点 goal ","date":"1 January 0001","permalink":"/posts/search-algorithm/","section":"Posts","summary":"搜搜算法的核心\nstate，状态，状态对应了搜索过程中的节点（node） action，动作 状态可以是一个数，可以是一个数组，可以是任何一系列能够描述事物的参数。比如对于迷宫而言，我们会将迷宫的每个位置有什么作为状态。\n动作存在于两个状态之间，比如我有一个动作是交换相邻元素。那么对于状态\n[1, 2, 3] -\u0026gt; [1, 3, 2] 以上就是交换后两个元素的动作。\n相邻状态，就是能从一个状态，执行一步动作就能到达的状态集合\n[1, 2, 3] -\u0026gt; [2, 1, 3]\r[1, 2, 3] -\u0026gt; [1, 3, 2] 状态123，经过一次交换动作，只能到达状态213，132，无法到达状态321，312，231\nfringe，边界（状态）集合，边界就是我已经枚举到了这个状态，但还没有从这个状态出发，考虑这个状态能够通过动作扩展出其他状态的状态集合（还没扩展）。","title":""},{"content":"TPO40 33:15\nThe reading passage states that the environments of Venus are so extreme that it is impossible to maintain a human presence there. However, all the problems raised in the reading passage can be solved according to the listening materials. Indeed, we can build a residential station that is floating about 50 kilometers\u0026rsquo; height.\nFirst, the extreme pressure is the biggest problem if someone wants to set a human presence at Venus\u0026rsquo; surface. However, as is proposed by the proferssor, the pressure about 50 kilometers from the surface approximately equals to what on the Earth. That is because the pressure will decrease when the height is increasing. Therefore, it is unnecessary to overcome those techniques to extreme pressure.\nSecond, the reading passage contends that the water, oxygen, and those who are fundamentals to human hardly exist on Venus and need to to transfer from Earth. In contrast, the professor argues that by collecting carbon dioxide and other resources, we can produce enough water and oxygen with some chemical procedures. That will save a lot and make it possible for living a long time.\nThird, by the reading passage, Venus is covered by thick clouds, very little sunlight reaches its surface and solar power cells are useless. While, the professor says, this problem still can be solved. When setting a station around 50 km, the clouds are not that thick, we can collect the direct sunlight from above and the reflected sunlight from below. So, there is sufficient energy to power the floating station.\nTPO28 52:48\nThe reading passage proposed three arguments that strong support for the truth that Peary have reached the pole on April 7, 1909. However, the listening materials believe those arguments are not solid and convincing, and offers relevant explanations to disprove them individually.\nFirst, though there is a committee investigating Peary\u0026rsquo;s records and equipment according to the reading passage. It is ture but the professor doubts they are not objective. Most members of the committee are Pearcy\u0026rsquo;s friends, they may support money to this challenge as fundation. Still the invesigation only last for two days, which could involve bias to the result.\nSecond, the reading passage raises a experiment that Tom reached the North Pole less than 37 days setting out from Ellesmere Island, which argues against Skeptics\u0026rsquo; arguement that Peary cannot travel that fast and is unable to reach within 37 days. But the situation has taken another turn. The professor states that Tom \u0026rsquo;s travel and Peary\u0026rsquo;s travel are different. Tom didn\u0026rsquo;t take food, and there was an airplane fly along with him, which meant Tom was traveling under external favor while Peary was unfavorable. So, the duration of Tom\u0026rsquo;s travel within 37 days cannot proves that Peary could do it as well.\nThird, the passage says there are some photographs can support Pearcy reached the North Pole, just by the cohererant of speculated time with Sun\u0026rsquo;s position. In contrast, the professor claims this method is inaccuracy, because the technique requires precise photographs, while those provided photographs are blurred and faded. Therefore, it is still unable to determine whether Peary\u0026rsquo;s North Pole travel is really taken.\nTPO49\nTPO16\n","date":"1 January 0001","permalink":"/posts/writing/0712/","section":"Posts","summary":"TPO40 33:15\nThe reading passage states that the environments of Venus are so extreme that it is impossible to maintain a human presence there. However, all the problems raised in the reading passage can be solved according to the listening materials.","title":""},{"content":"TPO31\nskin frills location - useless for flight ot themoregulatoin\nThe reading passgae states that the fine lines locate at the backbone or the tail of Sinoxxxx, which are useless for flight, so as less likely to be the feather. In contrast, the professor points out that not all feathers are for flight. For example, a bird whose tail is covered with feather for attracing spouses. An recently research finds that the fine lines should be colorful, orange and white, which cooresponds to the display function of feathers. So it is reasonable to\nfacilitate / contribute to\nExperienced employees with higher salaries or inexperienced employees with lower salaries?\nexperienced employees can work efficiently, because they are more familiar with the workflow. higer salaries can motivate the employee and attract more people, so it is more likely to find more adaptive employee. policies to have various educational the Internet\nTo begin with the relatively low salaries of the teachers is a reflection of the less appreciation and recognition of the\nNot that.\nYoung people\u0026rsquo;s interests are distributed in different areas due to the Internet development. There are more instersting topics now. We are far from the war for years. Unnecessary to care the policy trend. To begin with, the development of science and tech enables the young people to have more access get exposed to more political dynamics.\nFurthermore, there are various ways of politic education, which allows the young people to a analyze the politics.\n","date":"1 January 0001","permalink":"/posts/writing/0719/","section":"Posts","summary":"TPO31\nskin frills location - useless for flight ot themoregulatoin\nThe reading passgae states that the fine lines locate at the backbone or the tail of Sinoxxxx, which are useless for flight, so as less likely to be the feather.","title":""},{"content":" It is better for young people to take risks and explore new things than old people.\nYoung people\nenergetic more necessary In my opinion, it is better for young people to take risks and explore new things becasue experience is neccessary for them. To be more specific, young people have experienced less than old people, they have no idea what they should do is the best choice for most cases. To grow up until being able to confront troubles individually, they need to try different things and learn from their mistakes or success. Take an young researcher as an example, who is less experienced and have no idea which research area is suit for him or her. The only way to find out is to try different fields and find out what he or she is interested in. In the contrast, the old people usually have already found their own interest and have no need to try new things.\nOld people\nDeal with potrntial risks and challenges Strengthen the bound with the younger generation 绝对词：only, best, always.建议推翻\nA/D: We should only read books that are about real events, real people and established facts.\nfairytales novel - science fictions: stimulate our imagination - A/D: Always telling the truth is the most important considertaion in any relaationship between people.\nTo protect ourselves, criminals To educate children To encourage / cheer friends up To create surprise for friends A/D: The government has done enough to educate people about the importance of living a balanced and healthy life style.\nSedentary lifestyle A/D:\n综合：TPO50, TPO51\n","date":"1 January 0001","permalink":"/posts/writing/0730/","section":"Posts","summary":"It is better for young people to take risks and explore new things than old people.\nYoung people\nenergetic more necessary In my opinion, it is better for young people to take risks and explore new things becasue experience is neccessary for them.","title":""},{"content":"","date":"1 January 0001","permalink":"/posts/writing/","section":"Posts","summary":"","title":""},{"content":"\rSkills # Experience # Education # School Link Degree Year Shanghai Jiao Tong University B.S. in Computer Science 2019 - 2023 Wugang No.3 High School High School 2016 - 2019 Wugang Experimental School Middle School 2013 - 2016 Publications # Chen,\u0026#32; Ren\u0026#32;\u0026amp;\u0026#32;Song (2022) Chen,\u0026#32; X.,\u0026#32; Ren,\u0026#32; Y.\u0026#32;\u0026amp;\u0026#32;Song,\u0026#32; Y. \u0026#32; (2022). \u0026#32; Single image 3D scene reconstruction based on ShapeNet models. \u0026#32; SPIE. https://doi.org/10.1117/12.2645274 Certificates # OIerDb: https://oier.baoshuo.dev/oier/33582\nHonors \u0026amp; Awards # {1st Award} % Award\r{CCF NOIP2018 Senior Group} % Event\r{Wuhan, Hubei} % Location\r{Nov. 2018} % Date(s)\r","date":"1 January 0001","permalink":"/about-me/","section":"Home","summary":"Skills # Experience # Education # School Link Degree Year Shanghai Jiao Tong University B.S. in Computer Science 2019 - 2023 Wugang No.3 High School High School 2016 - 2019 Wugang Experimental School Middle School 2013 - 2016 Publications # Chen,\u0026#32; Ren\u0026#32;\u0026amp;\u0026#32;Song (2022) Chen,\u0026#32; X.","title":"About"},{"content":"\rPublications # Experience # Education # School Link Degree Year University of Otago B.S. in Computer Science 2019 - 2023 Bayfield High School High School 2016 - 2019 Wugang Experimental School Middle School 2013 - 2016 Certificates # Honors \u0026amp; Awards # ","date":"1 January 0001","permalink":"/about-ruiyi/","section":"Home","summary":"\rPublications # Experience # Education # School Link Degree Year University of Otago B.S. in Computer Science 2019 - 2023 Bayfield High School High School 2016 - 2019 Wugang Experimental School Middle School 2013 - 2016 Certificates # Honors \u0026amp; Awards # ","title":"About"}]